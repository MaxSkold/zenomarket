version: "3.9"

services:
  ######################
  # Микросервисы
  ######################

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8000:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=dev
      - DB_PASS=dev
    depends_on:
      - postgres

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "8001:8081"
    environment:
      - DB_HOST=postgres
    depends_on:
      - postgres

  payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "8002:8082"
    environment:
      - DB_HOST=postgres
      - STRIPE_KEY=dummy-key
    depends_on:
      - postgres

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8003:8083"
    environment:
      - DB_HOST=postgres
      - EVENT_BUS=kafka:9092
    depends_on:
      - postgres
      - kafka

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8004:8084"
    environment:
      - TWILIO_KEY=dummy-key
      - EVENT_BUS=kafka:9092
    depends_on:
      - kafka

  cart-service:
    build: ./cart-service
    container_name: cart-service
    ports:
      - "8005:8085"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis

  ######################
  # Инфраструктура
  ######################

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka:3
    container_name: kafka
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  ######################
  # Gateway (вариант 1: Go-прокси)
  ######################

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "80:8080"
    environment:
      - USER_SERVICE_URL=http://user-service:8080
      - PRODUCT_SERVICE_URL=http://product-service:8081
      - ORDER_SERVICE_URL=http://order-service:8083
      - CART_SERVICE_URL=http://cart-service:8085
      - PAYMENT_SERVICE_URL=http://payment-service:8082
    depends_on:
      - user-service
      - product-service
      - order-service
      - cart-service
      - payment-service

  ######################
  # Альтернатива: NGINX вместо Go-gateway
  ######################

  # gateway:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - user-service
  #     - product-service
  #     - cart-service
  #     - order-service

volumes:
  pgdata:
